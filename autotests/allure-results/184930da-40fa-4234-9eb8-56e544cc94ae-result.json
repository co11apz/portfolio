{"name": "Проверка наличия категорий", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <yt-chip-cloud-chip-renderer class=\"style-scope ytd-feed-filter-chip-bar-renderer\" modern=\"\" aria-selected=\"false\" role=\"tab\" tabindex=\"0\" chip-style=\"STYLE_HOME_FILTER\">...</yt-chip-cloud-chip-renderer> is not clickable at point (1418, 84). Other element would receive the click: <div id=\"right-arrow\" class=\"style-scope ytd-feed-filter-chip-bar-renderer\">...</div>\n  (Session info: chrome=121.0.6167.140)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6808D5E42+3538674]\n\t(No symbol) [0x00007FF6804F4C02]\n\t(No symbol) [0x00007FF6803A5AEB]\n\t(No symbol) [0x00007FF6803F33E4]\n\t(No symbol) [0x00007FF6803F1122]\n\t(No symbol) [0x00007FF6803EE884]\n\t(No symbol) [0x00007FF6803ED5A9]\n\t(No symbol) [0x00007FF6803E1950]\n\t(No symbol) [0x00007FF68040F0AA]\n\t(No symbol) [0x00007FF6803E124A]\n\t(No symbol) [0x00007FF68040F2C0]\n\t(No symbol) [0x00007FF68042BDE3]\n\t(No symbol) [0x00007FF68040EE53]\n\t(No symbol) [0x00007FF6803DF514]\n\t(No symbol) [0x00007FF6803E0631]\n\tGetHandleVerifier [0x00007FF680906CAD+3738973]\n\tGetHandleVerifier [0x00007FF68095C506+4089270]\n\tGetHandleVerifier [0x00007FF680954823+4057299]\n\tGetHandleVerifier [0x00007FF680625C49+720121]\n\t(No symbol) [0x00007FF68050126F]\n\t(No symbol) [0x00007FF6804FC304]\n\t(No symbol) [0x00007FF6804FC432]\n\t(No symbol) [0x00007FF6804EBD04]\n\tBaseThreadInitThunk [0x00007FFE9C5F7344+20]\n\tRtlUserThreadStart [0x00007FFE9D5A26B1+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc5f95d1370f813abfe4626f1ce45ffb\")>\n\n    @pytest.mark.presentation\n    @allure.suite(\"Categories\")\n    @allure.title(\"Проверка наличия категорий\")\n    def test_categories(driver):\n        main_page = MainPage(driver)\n        main_page.open_page()\n>       main_page.check_categories()\n\nautotests\\tests\\test_main_page.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nautotests\\pages\\main_page.py:389: in check_categories\n    category.click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002AE848DA030>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6804EBD04]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE9C5F7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE9D5A26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <yt-chip-cloud-chip-renderer class=\"style-scope ytd-feed-filter-chip-bar-renderer\" modern=\"\" aria-selected=\"false\" role=\"tab\" tabindex=\"0\" chip-style=\"STYLE_HOME_FILTER\">...</yt-chip-cloud-chip-renderer> is not clickable at point (1418, 84). Other element would receive the click: <div id=\"right-arrow\" class=\"style-scope ytd-feed-filter-chip-bar-renderer\">...</div>\nE         (Session info: chrome=121.0.6167.140)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6808D5E42+3538674]\nE       \t(No symbol) [0x00007FF6804F4C02]\nE       \t(No symbol) [0x00007FF6803A5AEB]\nE       \t(No symbol) [0x00007FF6803F33E4]\nE       \t(No symbol) [0x00007FF6803F1122]\nE       \t(No symbol) [0x00007FF6803EE884]\nE       \t(No symbol) [0x00007FF6803ED5A9]\nE       \t(No symbol) [0x00007FF6803E1950]\nE       \t(No symbol) [0x00007FF68040F0AA]\nE       \t(No symbol) [0x00007FF6803E124A]\nE       \t(No symbol) [0x00007FF68040F2C0]\nE       \t(No symbol) [0x00007FF68042BDE3]\nE       \t(No symbol) [0x00007FF68040EE53]\nE       \t(No symbol) [0x00007FF6803DF514]\nE       \t(No symbol) [0x00007FF6803E0631]\nE       \tGetHandleVerifier [0x00007FF680906CAD+3738973]\nE       \tGetHandleVerifier [0x00007FF68095C506+4089270]\nE       \tGetHandleVerifier [0x00007FF680954823+4057299]\nE       \tGetHandleVerifier [0x00007FF680625C49+720121]\nE       \t(No symbol) [0x00007FF68050126F]\nE       \t(No symbol) [0x00007FF6804FC304]\nE       \t(No symbol) [0x00007FF6804FC432]\nE       \t(No symbol) [0x00007FF6804EBD04]\nE       \tBaseThreadInitThunk [0x00007FFE9C5F7344+20]\nE       \tRtlUserThreadStart [0x00007FFE9D5A26B1+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Проверка перехода на главную страницу", "status": "passed", "start": 1706982007208, "stop": 1706982020936}, {"name": "Проверка наличия категорий", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <yt-chip-cloud-chip-renderer class=\"style-scope ytd-feed-filter-chip-bar-renderer\" modern=\"\" aria-selected=\"false\" role=\"tab\" tabindex=\"0\" chip-style=\"STYLE_HOME_FILTER\">...</yt-chip-cloud-chip-renderer> is not clickable at point (1418, 84). Other element would receive the click: <div id=\"right-arrow\" class=\"style-scope ytd-feed-filter-chip-bar-renderer\">...</div>\n  (Session info: chrome=121.0.6167.140)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6808D5E42+3538674]\n\t(No symbol) [0x00007FF6804F4C02]\n\t(No symbol) [0x00007FF6803A5AEB]\n\t(No symbol) [0x00007FF6803F33E4]\n\t(No symbol) [0x00007FF6803F1122]\n\t(No symbol) [0x00007FF6803EE884]\n\t(No symbol) [0x00007FF6803ED5A9]\n\t(No symbol) [0x00007FF6803E1950]\n\t(No symbol) [0x00007FF68040F0AA]\n\t(No symbol) [0x00007FF6803E124A]\n\t(No symbol) [0x00007FF68040F2C0]\n\t(No symbol) [0x00007FF68042BDE3]\n\t(No symbol) [0x00007FF68040EE53]\n\t(No symbol) [0x00007FF6803DF514]\n\t(No symbol) [0x00007FF6803E0631]\n\tGetHandleVerifier [0x00007FF680906CAD+3738973]\n\tGetHandleVerifier [0x00007FF68095C506+4089270]\n\tGetHandleVerifier [0x00007FF680954823+4057299]\n\tGetHandleVerifier [0x00007FF680625C49+720121]\n\t(No symbol) [0x00007FF68050126F]\n\t(No symbol) [0x00007FF6804FC304]\n\t(No symbol) [0x00007FF6804FC432]\n\t(No symbol) [0x00007FF6804EBD04]\n\tBaseThreadInitThunk [0x00007FFE9C5F7344+20]\n\tRtlUserThreadStart [0x00007FFE9D5A26B1+33]\n\n", "trace": "  File \"C:\\Users\\roman\\PycharmProjects\\portfolio\\autotests\\pages\\main_page.py\", line 389, in check_categories\n    category.click()\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1706982020936, "stop": 1706982036288}], "start": 1706982007208, "stop": 1706982036378, "uuid": "3e511813-42fb-4a02-adaf-978ffc6095d7", "historyId": "7a389b1f39afee08755487eb5d4d2138", "testCaseId": "7a389b1f39afee08755487eb5d4d2138", "fullName": "autotests.tests.test_main_page#test_categories", "labels": [{"name": "suite", "value": "Categories"}, {"name": "tag", "value": "presentation"}, {"name": "parentSuite", "value": "autotests.tests"}, {"name": "host", "value": "DESKTOP-5E29SMK"}, {"name": "thread", "value": "15600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "autotests.tests.test_main_page"}]}